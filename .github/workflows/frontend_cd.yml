name: Frontend - CD
on:
  #Manual trigger using the workflow_dispatch event
  workflow_dispatch:
  #Automatic trigger on push events to the main branch
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'

env:
    IMAGE_TAG: ${{ github.sha }}
  
jobs:
    #Perform linting job
    linting:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./starter/frontend/
  
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
  
      - name: Install Dependencies
        run: npm install
  
      - name: check code with eslint rules
        run: npm run lint
    
    #Perform testing job
    testing:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./starter/frontend/
  
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
  
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
  
      - name: Install Dependencies
        run: npm ci
  
      - name: Run Tests
        run: npm test 
    
    #Perform build and deploy job
    build-and-deploy:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./starter/frontend/
    # build and deploy job depend on above two jobs
      needs: [testing, linting]
  
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_K8S_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_K8S }}
          aws-region: us-east-1
  
      - name: Setup Kubectl
        uses: azure/setup-kubectl@v3
        id: install
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'
  
      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: frontend
          # IMAGE_TAG: ${{ github.sha }}
        run: |
          echo $IMAGE_TAG
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 -t $REGISTRY/$REPOSITORY:${{ env.IMAGE_TAG }} .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
  
      - name: Kubeconfig Auth
        run: aws eks update-kubeconfig --name cluster
  
      - name: Apply the manifests to the cluster
        env:
          REPOSITORY: frontend
        run: |
          cd k8s
          kustomize edit set image frontend=${{ steps.login-ecr.outputs.registry }}/frontend:${{ env.IMAGE_TAG }}
          kustomize build | kubectl apply -f -
  